

一、run_main主函数执行思路

1、是否运行

2、是否依赖别的case（有就更新报文）

	（1）、先获取excel依赖的字段内容 imooc_001>data.banner.[0].id，切割 -->split_data(data)
	（2）、获取excel用例的列内容，for循环该列，用number计数，获取imooc_001用例所在行号，并通过行号和固定列号获取该用例的结果报文 ----> depend_data(data)
	（3）、获取依赖字段的值  ---> get_depend_data(res_data,key)
	（4）、




3、携带cookie否？、将cookie写入文件？、需要携带header？

4、断言（1、错误信息描述断言；2、errorcode断言；3、比对报文结构断言）


接口自动化使用python+requests+unittest来做的，用例是写在excel中，框架中大概内容有：封装了读取excel的类、读取配置文件.json的类，写cookie和携带cookies的类，结果对比的类，还有接口数据关联
先说一下接口数据关联的实现：

1、接口数据关联：实现过程：假设这条用例依赖上一个接口的结果，则该接口中会有一个单元格维护了依赖的用例id和取值规则：像这样的：test_001>data.banner.[0].id，
   然后，以>号分割，前面是依赖的用例id，后面是取值规则，这个取值规则可以通过python的jsonpath_rw这个库去取值，此时我只需要知道依赖的case_id是在excel中的
   哪一行的，因为列号是固定的，知道行号后我就可以通过行和列去定位到那个存放结果的单元格，我就可以取到那个被依赖的结果，从中取出依赖的那个值，

   具体实现是：
   首先我会先切割，取到被依赖的用例的case id 为test_001,
   然后我会把excel中所有的case_id读取出来放到一个列表中，然后去遍历这个列表，把取出来的case_id和test_001进行比较，此时我会有一个变量number记录行数，如果不相等，那就number+1
   如果遍历出来的case_id和test_001相等，那此时的number值就是excel中的行号，此时我就可以知道被依赖的用例所在excel中的行号，此时我就可以取到被依赖用例的结果，并从中取出依赖的值，
   然后使用jsonpath_rw这个库，通过取值规则为data.banner.[0].id去获取到这个依赖的值，然后通过字典更新的方式将这个值更新到下一个接口的报文中

2、写cookie和是否需要携带cookies的实现：
    excel中也会有一个单元格记录着是否需要些cookie，运行的时候会判断，是否需要写cookies，需要的话就写到 json文件中；运行时也会判断，是否需要携带cookie，需要的话就去刚才写的json文件中拿

3、断言方面的实现：
    有两种对比方式：
    1）、通过返回的信息描述去断言。我会事先维护好一些code所对应的信息描述，然后接口返回时，我会获取到该code对应的信息描述，然后取和json文件中所维护的信息描述做对比，看是否正确
    2）、直接通过返回的code进行断言。这个是直接在excel中维护一个code，因为我知道这个接口的现在的这个参数会返回什么样的code，然后我直接通过返回的code去和我excel中
        维护的code做对比即可

